////
/// @group o-assets
/// @link http://registry.origami.ft.com/components/o-assets
////

/// Default global path to assets
///
/// @type String
$o-assets-global-path: '/bower_components/' !default;

/// Cast the asset map
///
/// It should contain pairs such as `o-module: path/to/module/assets`
///
/// @type map
$o-assets-paths-map: () !default;

/// Resolve the full path to an asset
///
/// @example scss
///  el { background: url(oAssetsResolve("img/symbols-sprite.png", o-weather)); }
///
/// @param {String} $asset - path to an asset, relative to the module's root
/// @param {String} $module - name of the module
@function oAssetsResolve($asset, $module) {
	$full-path: $asset;

	@if (map-has-key($o-assets-paths-map, $module)) {
		$module-path: map-get($o-assets-paths-map, $module);

		// allows putting assets in single directory shared by all modules
		@if ($module-path) {
			$full-path: $module-path + '/' + $full-path;
		}
	} @else {
		// defaults to use module name
		$full-path: $module + '/' + $full-path;

		// Only add the global path if a custom path hasn't been set
		@if ($o-assets-global-path) {
			$full-path: $o-assets-global-path + $full-path;
		}
	}

	@return #{$full-path};
}

/// Set asset paths for one or multiple modules
///
/// @example scss
///  @include oAssetsSetModulePaths((
///    o-header: /assets/header
///  ));
///
/// @param {Map} $path-map - Set of module names and paths
@mixin oAssetsSetModulePaths($path-map) {
	$o-assets-paths-map: map-merge($o-assets-paths-map, $path-map) !global;
}

/// @ignore
@function oAssetsSetModulePaths($path-map) {
	@warn "oAssetsSetModulePaths is a mixin, not a function; use @include oAssetsSetModulePaths($path-map)";
}

/// Resolve the full path of an asset for a specific version
///
/// @deprecated
@function oAssetsUse($asset, $module, $version) {
	@warn "`oAssetsUse` is deprecated and will be removed in next major release. Use `oAssetsResolve` instead. You should also remove `$#{$module}-version` and `$#{$module}-assets-path` from your module";

	$full-path: $asset;

	// If the version hasn't been set and the module path is just a module name, we can use oAssetsResolve
	@if ($module and str-index($module, 'o-') == 0 and str-index($module, '/') == null and $version == null) {
		// looks like the module's used the old syntax but the product hasn't overridden the default paths
		// using variables, so we should use the new method of checking o-assets-paths-map
		@return oAssetsResolve($asset, $module);
	} @else if ($module) {
		@if ($version) {
			$full-path: $module + '@' + $version + '/' + $full-path;
		} @else {
			$full-path: $module + '/' + $full-path;
		}
	}

	@if ($o-assets-global-path) {
		$full-path: $o-assets-global-path + $full-path;
	}

	@return #{$full-path};
}
